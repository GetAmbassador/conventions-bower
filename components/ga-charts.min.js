angular.module("ngAmbassador.charts",["ngAmbassador.services","angles"]).directive("gaLineChart",[function(){return{restrict:"E",templateUrl:"../ambassador/templates/charts/line-chart.html",replace:!1,scope:{config:"=",height:"@",width:"@"},link:function(scope,elm,attrs){var initChart=function(){scope.chartHeight=scope.height?scope.height:"150",scope.chartWidth=scope.width?scope.width:"300",scope.chart={},scope.options=scope.config.options||{},scope.chart.labels=scope.config.labels,scope.chart.datasets=[];for(var i=0;i<scope.config.datasets.length;i++){var dataset={active:!0,label:scope.config.datasets[i].label,fillColor:"rgba(255,255,255,0)",strokeColor:scope.config.datasets[i].color,pointColor:scope.config.datasets[i].color,pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:scope.config.datasets[i].color,data:scope.config.datasets[i].data};scope.chart.datasets.push(dataset)}scope.chartCopy=JSON.parse(JSON.stringify(scope.chart))};scope.$watch("config",function(){initChart()}),scope.toggleDataset=function(index){scope.chartCopy.datasets[index].active=!scope.chartCopy.datasets[index].active;for(var updatedDataset=[],activeCount=0,i=0;i<scope.chartCopy.datasets.length;i++)scope.chartCopy.datasets[i].active===!0&&(updatedDataset.push(scope.chartCopy.datasets[i]),activeCount++);activeCount>0?scope.chart.datasets=JSON.parse(JSON.stringify(updatedDataset)):scope.chartCopy.datasets[index].active=!scope.chartCopy.datasets[index].active}}}}]).directive("gaDoughnutChart",["$helper",function($helper){return{restrict:"E",templateUrl:"../ambassador/templates/charts/doughnut-chart.html",replace:!1,scope:{config:"=",responsive:"="},link:function(scope,elm,attrs){var initChart=function(){scope.chartData=[],scope.chartDataCopy=[],scope.chartLeftLabels=[],scope.chartRightLabels=[],scope.chartResponsive=void 0===scope.responsive||scope.responsive,scope.options=scope.config.options||{};for(var chartTotal=$helper.sum(scope.config.datasets,"value"),i=0;i<scope.config.datasets.length;i++){var dataset={active:!0,label:scope.config.datasets[i].label,iconClass:scope.config.datasets[i].iconClass,highlight:$helper.colorLuminance(scope.config.datasets[i].color,.1),color:scope.config.datasets[i].color,value:scope.config.datasets[i].value,percent:Math.round(scope.config.datasets[i].value/chartTotal*100)||0,id:i};scope.chartData.push(dataset),i<Math.ceil(scope.config.datasets.length/2)&&scope.chartLeftLabels.push(dataset),i>=Math.ceil(scope.config.datasets.length/2)&&scope.chartRightLabels.push(dataset)}scope.chartDataCopy=JSON.parse(JSON.stringify(scope.chartData))};scope.$watch("config",function(){initChart()}),scope.toggleDataset=function(index){scope.chartDataCopy[index].active=!scope.chartDataCopy[index].active;for(var updatedDataset=[],activeCount=0,i=0;i<scope.chartDataCopy.length;i++)scope.chartDataCopy[i].active===!0&&(updatedDataset.push(scope.chartDataCopy[i]),activeCount++);activeCount>0?scope.chartData=JSON.parse(JSON.stringify(updatedDataset)):scope.chartDataCopy[index].active=!scope.chartDataCopy[index].active},scope.checkActive=function(index){return scope.chartDataCopy[index].active}}}}]);